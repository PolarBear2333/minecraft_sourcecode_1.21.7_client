/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableMap
 *  com.google.common.collect.ImmutableMap$Builder
 *  com.mojang.serialization.Codec
 *  com.mojang.serialization.MapCodec
 */
package net.minecraft.client.renderer.special;

import com.google.common.collect.ImmutableMap;
import com.mojang.serialization.Codec;
import com.mojang.serialization.MapCodec;
import java.util.HashMap;
import java.util.Map;
import net.minecraft.client.model.geom.EntityModelSet;
import net.minecraft.client.renderer.blockentity.ChestRenderer;
import net.minecraft.client.renderer.special.BannerSpecialRenderer;
import net.minecraft.client.renderer.special.BedSpecialRenderer;
import net.minecraft.client.renderer.special.ChestSpecialRenderer;
import net.minecraft.client.renderer.special.ConduitSpecialRenderer;
import net.minecraft.client.renderer.special.DecoratedPotSpecialRenderer;
import net.minecraft.client.renderer.special.HangingSignSpecialRenderer;
import net.minecraft.client.renderer.special.PlayerHeadSpecialRenderer;
import net.minecraft.client.renderer.special.ShieldSpecialRenderer;
import net.minecraft.client.renderer.special.ShulkerBoxSpecialRenderer;
import net.minecraft.client.renderer.special.SkullSpecialRenderer;
import net.minecraft.client.renderer.special.SpecialModelRenderer;
import net.minecraft.client.renderer.special.StandingSignSpecialRenderer;
import net.minecraft.client.renderer.special.TridentSpecialRenderer;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.util.ExtraCodecs;
import net.minecraft.world.item.DyeColor;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.SkullBlock;
import net.minecraft.world.level.block.state.properties.WoodType;

public class SpecialModelRenderers {
    private static final ExtraCodecs.LateBoundIdMapper<ResourceLocation, MapCodec<? extends SpecialModelRenderer.Unbaked>> ID_MAPPER = new ExtraCodecs.LateBoundIdMapper();
    public static final Codec<SpecialModelRenderer.Unbaked> CODEC = ID_MAPPER.codec(ResourceLocation.CODEC).dispatch(SpecialModelRenderer.Unbaked::type, mapCodec -> mapCodec);
    private static final Map<Block, SpecialModelRenderer.Unbaked> STATIC_BLOCK_MAPPING = ImmutableMap.builder().put((Object)Blocks.SKELETON_SKULL, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.SKELETON)).put((Object)Blocks.ZOMBIE_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.ZOMBIE)).put((Object)Blocks.CREEPER_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.CREEPER)).put((Object)Blocks.DRAGON_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.DRAGON)).put((Object)Blocks.PIGLIN_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.PIGLIN)).put((Object)Blocks.PLAYER_HEAD, (Object)new PlayerHeadSpecialRenderer.Unbaked()).put((Object)Blocks.WITHER_SKELETON_SKULL, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.WITHER_SKELETON)).put((Object)Blocks.SKELETON_WALL_SKULL, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.SKELETON)).put((Object)Blocks.ZOMBIE_WALL_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.ZOMBIE)).put((Object)Blocks.CREEPER_WALL_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.CREEPER)).put((Object)Blocks.DRAGON_WALL_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.DRAGON)).put((Object)Blocks.PIGLIN_WALL_HEAD, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.PIGLIN)).put((Object)Blocks.PLAYER_WALL_HEAD, (Object)new PlayerHeadSpecialRenderer.Unbaked()).put((Object)Blocks.WITHER_SKELETON_WALL_SKULL, (Object)new SkullSpecialRenderer.Unbaked(SkullBlock.Types.WITHER_SKELETON)).put((Object)Blocks.WHITE_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.WHITE)).put((Object)Blocks.ORANGE_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.ORANGE)).put((Object)Blocks.MAGENTA_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.MAGENTA)).put((Object)Blocks.LIGHT_BLUE_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.LIGHT_BLUE)).put((Object)Blocks.YELLOW_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.YELLOW)).put((Object)Blocks.LIME_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.LIME)).put((Object)Blocks.PINK_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.PINK)).put((Object)Blocks.GRAY_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.GRAY)).put((Object)Blocks.LIGHT_GRAY_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.LIGHT_GRAY)).put((Object)Blocks.CYAN_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.CYAN)).put((Object)Blocks.PURPLE_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.PURPLE)).put((Object)Blocks.BLUE_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.BLUE)).put((Object)Blocks.BROWN_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.BROWN)).put((Object)Blocks.GREEN_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.GREEN)).put((Object)Blocks.RED_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.RED)).put((Object)Blocks.BLACK_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.BLACK)).put((Object)Blocks.WHITE_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.WHITE)).put((Object)Blocks.ORANGE_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.ORANGE)).put((Object)Blocks.MAGENTA_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.MAGENTA)).put((Object)Blocks.LIGHT_BLUE_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.LIGHT_BLUE)).put((Object)Blocks.YELLOW_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.YELLOW)).put((Object)Blocks.LIME_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.LIME)).put((Object)Blocks.PINK_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.PINK)).put((Object)Blocks.GRAY_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.GRAY)).put((Object)Blocks.LIGHT_GRAY_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.LIGHT_GRAY)).put((Object)Blocks.CYAN_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.CYAN)).put((Object)Blocks.PURPLE_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.PURPLE)).put((Object)Blocks.BLUE_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.BLUE)).put((Object)Blocks.BROWN_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.BROWN)).put((Object)Blocks.GREEN_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.GREEN)).put((Object)Blocks.RED_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.RED)).put((Object)Blocks.BLACK_WALL_BANNER, (Object)new BannerSpecialRenderer.Unbaked(DyeColor.BLACK)).put((Object)Blocks.WHITE_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.WHITE)).put((Object)Blocks.ORANGE_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.ORANGE)).put((Object)Blocks.MAGENTA_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.MAGENTA)).put((Object)Blocks.LIGHT_BLUE_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.LIGHT_BLUE)).put((Object)Blocks.YELLOW_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.YELLOW)).put((Object)Blocks.LIME_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.LIME)).put((Object)Blocks.PINK_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.PINK)).put((Object)Blocks.GRAY_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.GRAY)).put((Object)Blocks.LIGHT_GRAY_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.LIGHT_GRAY)).put((Object)Blocks.CYAN_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.CYAN)).put((Object)Blocks.PURPLE_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.PURPLE)).put((Object)Blocks.BLUE_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.BLUE)).put((Object)Blocks.BROWN_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.BROWN)).put((Object)Blocks.GREEN_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.GREEN)).put((Object)Blocks.RED_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.RED)).put((Object)Blocks.BLACK_BED, (Object)new BedSpecialRenderer.Unbaked(DyeColor.BLACK)).put((Object)Blocks.SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked()).put((Object)Blocks.WHITE_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.WHITE)).put((Object)Blocks.ORANGE_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.ORANGE)).put((Object)Blocks.MAGENTA_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.MAGENTA)).put((Object)Blocks.LIGHT_BLUE_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.LIGHT_BLUE)).put((Object)Blocks.YELLOW_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.YELLOW)).put((Object)Blocks.LIME_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.LIME)).put((Object)Blocks.PINK_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.PINK)).put((Object)Blocks.GRAY_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.GRAY)).put((Object)Blocks.LIGHT_GRAY_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.LIGHT_GRAY)).put((Object)Blocks.CYAN_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.CYAN)).put((Object)Blocks.PURPLE_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.PURPLE)).put((Object)Blocks.BLUE_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.BLUE)).put((Object)Blocks.BROWN_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.BROWN)).put((Object)Blocks.GREEN_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.GREEN)).put((Object)Blocks.RED_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.RED)).put((Object)Blocks.BLACK_SHULKER_BOX, (Object)new ShulkerBoxSpecialRenderer.Unbaked(DyeColor.BLACK)).put((Object)Blocks.OAK_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.OAK)).put((Object)Blocks.SPRUCE_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.SPRUCE)).put((Object)Blocks.BIRCH_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.BIRCH)).put((Object)Blocks.ACACIA_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.ACACIA)).put((Object)Blocks.CHERRY_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.CHERRY)).put((Object)Blocks.JUNGLE_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.JUNGLE)).put((Object)Blocks.DARK_OAK_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.DARK_OAK)).put((Object)Blocks.PALE_OAK_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.PALE_OAK)).put((Object)Blocks.MANGROVE_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.MANGROVE)).put((Object)Blocks.BAMBOO_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.BAMBOO)).put((Object)Blocks.CRIMSON_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.CRIMSON)).put((Object)Blocks.WARPED_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.WARPED)).put((Object)Blocks.OAK_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.OAK)).put((Object)Blocks.SPRUCE_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.SPRUCE)).put((Object)Blocks.BIRCH_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.BIRCH)).put((Object)Blocks.ACACIA_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.ACACIA)).put((Object)Blocks.CHERRY_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.CHERRY)).put((Object)Blocks.JUNGLE_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.JUNGLE)).put((Object)Blocks.DARK_OAK_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.DARK_OAK)).put((Object)Blocks.PALE_OAK_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.PALE_OAK)).put((Object)Blocks.MANGROVE_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.MANGROVE)).put((Object)Blocks.BAMBOO_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.BAMBOO)).put((Object)Blocks.CRIMSON_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.CRIMSON)).put((Object)Blocks.WARPED_WALL_SIGN, (Object)new StandingSignSpecialRenderer.Unbaked(WoodType.WARPED)).put((Object)Blocks.OAK_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.OAK)).put((Object)Blocks.SPRUCE_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.SPRUCE)).put((Object)Blocks.BIRCH_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.BIRCH)).put((Object)Blocks.ACACIA_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.ACACIA)).put((Object)Blocks.CHERRY_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.CHERRY)).put((Object)Blocks.JUNGLE_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.JUNGLE)).put((Object)Blocks.DARK_OAK_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.DARK_OAK)).put((Object)Blocks.PALE_OAK_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.PALE_OAK)).put((Object)Blocks.MANGROVE_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.MANGROVE)).put((Object)Blocks.BAMBOO_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.BAMBOO)).put((Object)Blocks.CRIMSON_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.CRIMSON)).put((Object)Blocks.WARPED_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.WARPED)).put((Object)Blocks.OAK_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.OAK)).put((Object)Blocks.SPRUCE_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.SPRUCE)).put((Object)Blocks.BIRCH_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.BIRCH)).put((Object)Blocks.ACACIA_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.ACACIA)).put((Object)Blocks.CHERRY_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.CHERRY)).put((Object)Blocks.JUNGLE_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.JUNGLE)).put((Object)Blocks.DARK_OAK_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.DARK_OAK)).put((Object)Blocks.PALE_OAK_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.PALE_OAK)).put((Object)Blocks.MANGROVE_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.MANGROVE)).put((Object)Blocks.BAMBOO_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.BAMBOO)).put((Object)Blocks.CRIMSON_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.CRIMSON)).put((Object)Blocks.WARPED_WALL_HANGING_SIGN, (Object)new HangingSignSpecialRenderer.Unbaked(WoodType.WARPED)).put((Object)Blocks.CONDUIT, (Object)new ConduitSpecialRenderer.Unbaked()).put((Object)Blocks.CHEST, (Object)new ChestSpecialRenderer.Unbaked(ChestSpecialRenderer.NORMAL_CHEST_TEXTURE)).put((Object)Blocks.TRAPPED_CHEST, (Object)new ChestSpecialRenderer.Unbaked(ChestSpecialRenderer.TRAPPED_CHEST_TEXTURE)).put((Object)Blocks.ENDER_CHEST, (Object)new ChestSpecialRenderer.Unbaked(ChestSpecialRenderer.ENDER_CHEST_TEXTURE)).put((Object)Blocks.DECORATED_POT, (Object)new DecoratedPotSpecialRenderer.Unbaked()).build();
    private static final ChestSpecialRenderer.Unbaked GIFT_CHEST = new ChestSpecialRenderer.Unbaked(ChestSpecialRenderer.GIFT_CHEST_TEXTURE);

    public static void bootstrap() {
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("bed"), BedSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("banner"), BannerSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("conduit"), ConduitSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("chest"), ChestSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("head"), SkullSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("player_head"), PlayerHeadSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("shulker_box"), ShulkerBoxSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("shield"), ShieldSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("trident"), TridentSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("decorated_pot"), DecoratedPotSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("standing_sign"), StandingSignSpecialRenderer.Unbaked.MAP_CODEC);
        ID_MAPPER.put(ResourceLocation.withDefaultNamespace("hanging_sign"), HangingSignSpecialRenderer.Unbaked.MAP_CODEC);
    }

    public static Map<Block, SpecialModelRenderer<?>> createBlockRenderers(EntityModelSet entityModelSet) {
        HashMap<Block, SpecialModelRenderer.Unbaked> hashMap = new HashMap<Block, SpecialModelRenderer.Unbaked>(STATIC_BLOCK_MAPPING);
        if (ChestRenderer.xmasTextures()) {
            hashMap.put(Blocks.CHEST, GIFT_CHEST);
            hashMap.put(Blocks.TRAPPED_CHEST, GIFT_CHEST);
        }
        ImmutableMap.Builder builder = ImmutableMap.builder();
        hashMap.forEach((block, unbaked) -> {
            SpecialModelRenderer<?> specialModelRenderer = unbaked.bake(entityModelSet);
            if (specialModelRenderer != null) {
                builder.put(block, specialModelRenderer);
            }
        });
        return builder.build();
    }
}

